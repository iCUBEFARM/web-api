# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-10-31 06:36
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('second_name', models.CharField(max_length=150, verbose_name='second name')),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=150, verbose_name='subject')),
                ('message', models.CharField(max_length=3000, verbose_name='message')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_1', models.CharField(max_length=300, verbose_name='address')),
                ('address_2', models.CharField(blank=True, max_length=300, verbose_name='address continued')),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='AdminEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='category')),
                ('description', models.CharField(max_length=500, verbose_name='Description of category')),
                ('slug', models.SlugField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=165)),
                ('city_en', models.CharField(blank=True, max_length=165, null=True)),
                ('city_fr', models.CharField(blank=True, max_length=165, null=True)),
                ('city_es', models.CharField(blank=True, max_length=165, null=True)),
            ],
            options={
                'ordering': ('city', 'state'),
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=40, unique=True)),
                ('country_en', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('country_fr', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('country_es', models.CharField(blank=True, max_length=40, null=True, unique=True)),
                ('code', models.CharField(blank=True, max_length=2)),
            ],
            options={
                'ordering': ('country',),
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='currency')),
                ('code', models.CharField(max_length=4, verbose_name='currency code')),
            ],
            options={
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500, verbose_name='question')),
                ('question_en', models.CharField(max_length=500, null=True, verbose_name='question')),
                ('question_fr', models.CharField(max_length=500, null=True, verbose_name='question')),
                ('question_es', models.CharField(max_length=500, null=True, verbose_name='question')),
                ('answer', models.CharField(max_length=1000, verbose_name='answer')),
                ('answer_en', models.CharField(max_length=1000, null=True, verbose_name='answer')),
                ('answer_fr', models.CharField(max_length=1000, null=True, verbose_name='answer')),
                ('answer_es', models.CharField(max_length=1000, null=True, verbose_name='answer')),
            ],
        ),
        migrations.CreateModel(
            name='FeaturedEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='title')),
                ('title_en', models.CharField(max_length=150, null=True, verbose_name='title')),
                ('title_fr', models.CharField(max_length=150, null=True, verbose_name='title')),
                ('title_es', models.CharField(max_length=150, null=True, verbose_name='title')),
                ('image', models.ImageField(upload_to='featured-event-images')),
                ('description', models.CharField(max_length=150, verbose_name='description')),
                ('description_en', models.CharField(max_length=150, null=True, verbose_name='description')),
                ('description_fr', models.CharField(max_length=150, null=True, verbose_name='description')),
                ('description_es', models.CharField(max_length=150, null=True, verbose_name='description')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive')], default=2)),
                ('location', models.CharField(max_length=70, verbose_name='location')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(verbose_name='end date')),
                ('start_date_timing', models.CharField(blank=True, max_length=50, verbose_name='start date timing')),
                ('end_date_timing', models.CharField(blank=True, max_length=50, verbose_name='end date timing')),
                ('contact_email', models.EmailField(max_length=254)),
                ('slug', models.SlugField(blank=True)),
                ('contact_no', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeaturedVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='title')),
                ('title_en', models.CharField(max_length=150, null=True, verbose_name='title')),
                ('title_fr', models.CharField(max_length=150, null=True, verbose_name='title')),
                ('title_es', models.CharField(max_length=150, null=True, verbose_name='title')),
                ('video_url', models.URLField()),
                ('description', models.CharField(max_length=150, verbose_name='description')),
                ('description_en', models.CharField(max_length=150, null=True, verbose_name='description')),
                ('description_fr', models.CharField(max_length=150, null=True, verbose_name='description')),
                ('description_es', models.CharField(max_length=150, null=True, verbose_name='description')),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive')], default=2)),
                ('is_main_video', models.BooleanField(default=False)),
                ('show_in_dashboard', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='language')),
                ('code', models.CharField(max_length=3, verbose_name='code')),
            ],
            options={
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='Sponsored',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('object_id', models.PositiveIntegerField()),
                ('start_date', models.DateTimeField(verbose_name='valid from')),
                ('end_date', models.DateTimeField(verbose_name='valid till')),
                ('count', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'Active'), (2, 'Inactive')], default=1)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=165)),
                ('state_en', models.CharField(blank=True, max_length=165, null=True)),
                ('state_fr', models.CharField(blank=True, max_length=165, null=True)),
                ('state_es', models.CharField(blank=True, max_length=165, null=True)),
                ('code', models.CharField(blank=True, max_length=3)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='icf_generic.Country')),
            ],
            options={
                'ordering': ('country', 'state'),
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Description of type of item')),
                ('slug', models.SlugField(blank=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='icf_generic.State'),
        ),
        migrations.AddField(
            model_name='category',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='icf_generic.Type'),
        ),
        migrations.AddField(
            model_name='address',
            name='city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='icf_generic.City'),
        ),
        migrations.AlterUniqueTogether(
            name='state',
            unique_together=set([('state', 'country')]),
        ),
        migrations.AlterUniqueTogether(
            name='city',
            unique_together=set([('city', 'state')]),
        ),
    ]
